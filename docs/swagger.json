{
    "swagger": "2.0",
    "info": {
        "description": "API documentation for Time Capsule services",
        "title": "API Gateway",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/comment/add": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new comment with provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comment"
                ],
                "summary": "Add a new comment",
                "parameters": [
                    {
                        "description": "Add comment request",
                        "name": "AddComment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.AddCommentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment successfully added",
                        "schema": {
                            "$ref": "#/definitions/genproto.AddCommentResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/comment/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a comment based on the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comment"
                ],
                "summary": "Delete a comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/genproto.DeleteCommentResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/comment/get/memory/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves comments associated with a specific memory ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comment"
                ],
                "summary": "Get comments by memory ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Memory ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comments found",
                        "schema": {
                            "$ref": "#/definitions/genproto.GetByIdMemoryResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Comments not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/comment/get/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a comment entry based on the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comment"
                ],
                "summary": "Get a comment by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment found",
                        "schema": {
                            "$ref": "#/definitions/genproto.GetByCommentIdResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/comment/gets": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all stored comments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comment"
                ],
                "summary": "Get all comments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "UserID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "Limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "Offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of comments",
                        "schema": {
                            "$ref": "#/definitions/genproto.GetCommentsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/comment/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing comment with new content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comment"
                ],
                "summary": "Update a comment",
                "parameters": [
                    {
                        "description": "Update comment request",
                        "name": "UpdateComment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.UpdateCommentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment successfully updated",
                        "schema": {
                            "$ref": "#/definitions/genproto.UpdateCommentResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/customevent/add": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new custom event with provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CustomEvents"
                ],
                "summary": "Add a new custom event",
                "parameters": [
                    {
                        "description": "Add custom event request",
                        "name": "AddCustomEvent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.AddCustomEventRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Custom event successfully added",
                        "schema": {
                            "$ref": "#/definitions/genproto.AddCustomEventResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/customevent/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a custom event based on the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CustomEvents"
                ],
                "summary": "Delete a custom event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Custom event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Custom event successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/genproto.DeleteCustomEventsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Custom event not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/customevent/get/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a custom event based on the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CustomEvents"
                ],
                "summary": "Get a custom event by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Custom event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Custom event found",
                        "schema": {
                            "$ref": "#/definitions/genproto.GetByIdEvetsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Custom event not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/customevent/gets": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve all custom events based on provided filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CustomEvents"
                ],
                "summary": "Get all custom events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID filter",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date filter",
                        "name": "date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Title filter",
                        "name": "title",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Custom events found",
                        "schema": {
                            "$ref": "#/definitions/genproto.GetAllEventsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/customevent/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing custom event based on provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CustomEvents"
                ],
                "summary": "Update a custom event",
                "parameters": [
                    {
                        "description": "Update custom event request",
                        "name": "UpdateCustomEvent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.UpdateCustomEventsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Custom event successfully updated",
                        "schema": {
                            "$ref": "#/definitions/genproto.UpdateCustomEventsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Custom event not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/historical/add": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new historical event with provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HistoricalEvents"
                ],
                "summary": "Add a new historical event",
                "parameters": [
                    {
                        "description": "Add historical event request",
                        "name": "AddHistoricalEvent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.AddHistoricalEventRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Historical event successfully added",
                        "schema": {
                            "$ref": "#/definitions/genproto.AddHistoricalEventResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/historical/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a historical event based on the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HistoricalEvents"
                ],
                "summary": "Delete a historical event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Historical event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Historical event successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/genproto.DeleteHistoricalEventResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Historical event not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/historical/gets": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve all historical events based on provided filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HistoricalEvents"
                ],
                "summary": "Get all historical events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Limit number of events",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date filter",
                        "name": "date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Historical events found",
                        "schema": {
                            "$ref": "#/definitions/genproto.GetAllHistoricalResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/media/add": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add media to a specific memory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Add new media",
                "parameters": [
                    {
                        "description": "Add media request",
                        "name": "AddMedia",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MediaReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Media successfully added",
                        "schema": {
                            "$ref": "#/definitions/genproto.AddMediaResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/media/delete/{id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete media by memory ID and media ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Delete media",
                "parameters": [
                    {
                        "description": "Delete media request",
                        "name": "DeleteMedia",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.DeleteMediaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Media deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.DeleteMediaResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/media/get/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve all media related to a specific memory ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Get media by memory ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get media by memory ID request",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Media retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.GetMediaByMemoryIdResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/media/gets": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve all media, optionally filtered by type and URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Get all media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "URL",
                        "name": "url",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Media retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.GetAllMediaResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/media/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update media details such as type and URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Update media",
                "parameters": [
                    {
                        "description": "Update media request",
                        "name": "UpdateMedia",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.UpdateMediaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Media updated successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.UpdateMediaResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/memory/add": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new memory with provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Memory"
                ],
                "summary": "Add a new memory",
                "parameters": [
                    {
                        "description": "Add memory request",
                        "name": "AddMemory",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.AddMemoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Memory successfully added",
                        "schema": {
                            "$ref": "#/definitions/genproto.AddMemoryResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/memory/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a memory based on the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Memory"
                ],
                "summary": "Delete a memory",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Memory ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Memory successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/genproto.DeleteMemoryResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Memory not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/memory/get/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a memory based on the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Memory"
                ],
                "summary": "Get a memory by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Memory ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Memory found",
                        "schema": {
                            "$ref": "#/definitions/genproto.GetMemoryResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Memory not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/memory/gets": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve all memories based on provided filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Memory"
                ],
                "summary": "Get all memories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start date filter",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date filter",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tags filter",
                        "name": "tags",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Memories found",
                        "schema": {
                            "$ref": "#/definitions/genproto.GetAllMemoriesResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/memory/share": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Share a memory with specified users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Memory"
                ],
                "summary": "Share a memory",
                "parameters": [
                    {
                        "description": "Share memory request",
                        "name": "ShareMemory",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.ShareMemoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Memory successfully shared",
                        "schema": {
                            "$ref": "#/definitions/genproto.ShareMemoryResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Memory not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/memory/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing memory based on provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Memory"
                ],
                "summary": "Update a memory",
                "parameters": [
                    {
                        "description": "Update memory request",
                        "name": "UpdateMemory",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.UpdateMemoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Memory successfully updated",
                        "schema": {
                            "$ref": "#/definitions/genproto.UpdateMemoryResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Memory not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/milestone/add": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new milestone with provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Milestones"
                ],
                "summary": "Add a new milestone",
                "parameters": [
                    {
                        "description": "Add milestone request",
                        "name": "AddMilestone",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.AddMilestonesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Milestone successfully added",
                        "schema": {
                            "$ref": "#/definitions/genproto.AddMilestonesResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/milestone/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a milestone based on the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Milestones"
                ],
                "summary": "Delete a milestone",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Milestone ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Milestone successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/genproto.DeleteMilestonesResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Milestone not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/milestone/gets": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve all milestones based on provided filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Milestones"
                ],
                "summary": "Get all milestones",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Date filter",
                        "name": "date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Title filter",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Category filter",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "User ID filter",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Milestones found",
                        "schema": {
                            "$ref": "#/definitions/genproto.GetAllMilestonesResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/milestone/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing milestone based on provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Milestones"
                ],
                "summary": "Update a milestone",
                "parameters": [
                    {
                        "description": "Update milestone request",
                        "name": "UpdateMilestone",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.UpdateMilestonesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Milestone successfully updated",
                        "schema": {
                            "$ref": "#/definitions/genproto.UpdateMilestonesResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Milestone not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/timeline/add": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new timeline entry with provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Timeline"
                ],
                "summary": "Add a new timeline entry",
                "parameters": [
                    {
                        "description": "Add timeline request",
                        "name": "AddTimeLine",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.AddTimeLineRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Timeline entry successfully added",
                        "schema": {
                            "$ref": "#/definitions/genproto.AddTimeLineResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/timeline/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a timeline entry based on the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Timeline"
                ],
                "summary": "Delete a timeline entry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Timeline entry ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Timeline entry successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/genproto.DeleteTimeLineResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Timeline entry not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/timeline/gets": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve user events based on provided filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Timeline"
                ],
                "summary": "Get user events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Limit number of events",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date filter",
                        "name": "date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User events found",
                        "schema": {
                            "$ref": "#/definitions/genproto.GetUserEventsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/timeline/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Search timeline events within a specified date range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Timeline"
                ],
                "summary": "Search timeline events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date of search",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date of search",
                        "name": "end_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Timeline events found",
                        "schema": {
                            "$ref": "#/definitions/genproto.SearchTimeLineResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "genproto.AddCommentRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "memory_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.AddCommentResponse": {
            "type": "object"
        },
        "genproto.AddCustomEventRequest": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.AddCustomEventResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "genproto.AddHistoricalEventRequest": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "source_url": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "genproto.AddHistoricalEventResponse": {
            "type": "object"
        },
        "genproto.AddMediaResponse": {
            "type": "object"
        },
        "genproto.AddMemoryRequest": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "place_name": {
                    "type": "string"
                },
                "privacy": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.AddMemoryResponse": {
            "type": "object"
        },
        "genproto.AddMilestonesRequest": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.AddMilestonesResponse": {
            "type": "object"
        },
        "genproto.AddTimeLineRequest": {
            "type": "object",
            "properties": {
                "events": {
                    "$ref": "#/definitions/genproto.Events"
                },
                "id": {
                    "type": "string"
                },
                "last_updated": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.AddTimeLineResponse": {
            "type": "object"
        },
        "genproto.ByMemoryId": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.Comment": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "memory_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.CustomEvents": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.DeleteCommentResponse": {
            "type": "object"
        },
        "genproto.DeleteCustomEventsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "genproto.DeleteHistoricalEventResponse": {
            "type": "object"
        },
        "genproto.DeleteMediaRequest": {
            "type": "object",
            "properties": {
                "media_id": {
                    "type": "string"
                },
                "memory_id": {
                    "type": "string"
                }
            }
        },
        "genproto.DeleteMediaResponse": {
            "type": "object"
        },
        "genproto.DeleteMemoryResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "genproto.DeleteMilestonesResponse": {
            "type": "object"
        },
        "genproto.DeleteTimeLineResponse": {
            "type": "object"
        },
        "genproto.Events": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "preview": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "genproto.GetAllEventsResponse": {
            "type": "object",
            "properties": {
                "event": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.CustomEvents"
                    }
                }
            }
        },
        "genproto.GetAllHistoricalResponse": {
            "type": "object",
            "properties": {
                "event": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.HistoricalEvents"
                    }
                }
            }
        },
        "genproto.GetAllMediaResponse": {
            "type": "object",
            "properties": {
                "media": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.Media"
                    }
                }
            }
        },
        "genproto.GetAllMemoriesResponse": {
            "type": "object",
            "properties": {
                "memories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.Memory"
                    }
                }
            }
        },
        "genproto.GetAllMilestonesResponse": {
            "type": "object",
            "properties": {
                "milestone": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.Milestones"
                    }
                }
            }
        },
        "genproto.GetByCommentIdResponse": {
            "type": "object",
            "properties": {
                "comment": {
                    "$ref": "#/definitions/genproto.Comment"
                }
            }
        },
        "genproto.GetByIdEvetsResponse": {
            "type": "object",
            "properties": {
                "event": {
                    "$ref": "#/definitions/genproto.CustomEvents"
                }
            }
        },
        "genproto.GetByIdMemoryResponse": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.ByMemoryId"
                    }
                }
            }
        },
        "genproto.GetCommentsResponse": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.Comment"
                    }
                }
            }
        },
        "genproto.GetMediaByMemoryIdResponse": {
            "type": "object",
            "properties": {
                "media": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.Media"
                    }
                }
            }
        },
        "genproto.GetMemoryResponse": {
            "type": "object",
            "properties": {
                "memory": {
                    "$ref": "#/definitions/genproto.Memory"
                }
            }
        },
        "genproto.GetUserEventsResponse": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.Events"
                    }
                }
            }
        },
        "genproto.HistoricalEvents": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "source_url": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "genproto.Media": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "memory_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "genproto.Memory": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "place_name": {
                    "type": "string"
                },
                "privacy": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.Milestones": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.SearchTimeLineResponse": {
            "type": "object",
            "properties": {
                "event": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.Events"
                    }
                }
            }
        },
        "genproto.ShareMemoryRequest": {
            "type": "object",
            "properties": {
                "memory_id": {
                    "type": "string"
                },
                "shared_with": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "genproto.ShareMemoryResponse": {
            "type": "object"
        },
        "genproto.UpdateCommentRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "memory_id": {
                    "type": "string"
                }
            }
        },
        "genproto.UpdateCommentResponse": {
            "type": "object"
        },
        "genproto.UpdateCustomEventsRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "event_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "genproto.UpdateCustomEventsResponse": {
            "type": "object"
        },
        "genproto.UpdateMediaRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "memory_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "genproto.UpdateMediaResponse": {
            "type": "object"
        },
        "genproto.UpdateMemoryRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "genproto.UpdateMemoryResponse": {
            "type": "object"
        },
        "genproto.UpdateMilestonesRequest": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "genproto.UpdateMilestonesResponse": {
            "type": "object"
        },
        "models.MediaReq": {
            "type": "object",
            "properties": {
                "memory_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}